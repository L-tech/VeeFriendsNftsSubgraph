// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get approved(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SellerAdded extends ethereum.Event {
  get params(): SellerAdded__Params {
    return new SellerAdded__Params(this);
  }
}

export class SellerAdded__Params {
  _event: SellerAdded;

  constructor(event: SellerAdded) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get offeringId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SellerRemoved extends ethereum.Event {
  get params(): SellerRemoved__Params {
    return new SellerRemoved__Params(this);
  }
}

export class SellerRemoved__Params {
  _event: SellerRemoved;

  constructor(event: SellerRemoved) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get offeringId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TokenContentAdded extends ethereum.Event {
  get params(): TokenContentAdded__Params {
    return new TokenContentAdded__Params(this);
  }
}

export class TokenContentAdded__Params {
  _event: TokenContentAdded;

  constructor(event: TokenContentAdded) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class TokenRedeemed extends ethereum.Event {
  get params(): TokenRedeemed__Params {
    return new TokenRedeemed__Params(this);
  }
}

export class TokenRedeemed__Params {
  _event: TokenRedeemed;

  constructor(event: TokenRedeemed) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Token__getMetadataResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get attributes(): Array<Token__getMetadataResultValue0AttributesStruct> {
    return this[2].toTupleArray<
      Token__getMetadataResultValue0AttributesStruct
    >();
  }

  get editionSize(): BigInt {
    return this[3].toBigInt();
  }

  get editionNumber(): BigInt {
    return this[4].toBigInt();
  }

  get totalRedemptions(): BigInt {
    return this[5].toBigInt();
  }

  get redemptionExpiration(): BigInt {
    return this[6].toBigInt();
  }

  get content(): Array<Token__getMetadataResultValue0ContentStruct> {
    return this[7].toTupleArray<Token__getMetadataResultValue0ContentStruct>();
  }

  get redemptions(): Array<Token__getMetadataResultValue0RedemptionsStruct> {
    return this[8].toTupleArray<
      Token__getMetadataResultValue0RedemptionsStruct
    >();
  }

  get soldOn(): BigInt {
    return this[9].toBigInt();
  }

  get buyer(): Address {
    return this[10].toAddress();
  }

  get price(): BigInt {
    return this[11].toBigInt();
  }

  get isMinted(): boolean {
    return this[12].toBoolean();
  }

  get additionalContent(): Array<
    Token__getMetadataResultValue0AdditionalContentStruct
  > {
    return this[13].toTupleArray<
      Token__getMetadataResultValue0AdditionalContentStruct
    >();
  }
}

export class Token__getMetadataResultValue0AttributesStruct extends ethereum.Tuple {
  get isArray(): boolean {
    return this[0].toBoolean();
  }

  get key(): string {
    return this[1].toString();
  }

  get values(): Array<string> {
    return this[2].toStringArray();
  }
}

export class Token__getMetadataResultValue0ContentStruct extends ethereum.Tuple {
  get uri(): string {
    return this[0].toString();
  }

  get contentLibraryArweaveHash(): string {
    return this[1].toString();
  }

  get contentIndex(): i32 {
    return this[2].toI32();
  }

  get contentType(): string {
    return this[3].toString();
  }
}

export class Token__getMetadataResultValue0RedemptionsStruct extends ethereum.Tuple {
  get timestamp(): BigInt {
    return this[0].toBigInt();
  }

  get memo(): string {
    return this[1].toString();
  }
}

export class Token__getMetadataResultValue0AdditionalContentStruct extends ethereum.Tuple {
  get slug(): string {
    return this[0].toString();
  }

  get uri(): string {
    return this[1].toString();
  }

  get contentLibraryArweaveHash(): string {
    return this[2].toString();
  }

  get contentIndex(): i32 {
    return this[3].toI32();
  }

  get contentType(): string {
    return this[4].toString();
  }
}

export class Token extends ethereum.SmartContract {
  static bind(address: Address): Token {
    return new Token("Token", address);
  }

  CONTENT_ROLE(): Bytes {
    let result = super.call("CONTENT_ROLE", "CONTENT_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_CONTENT_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("CONTENT_ROLE", "CONTENT_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  INFRA_ROLE(): Bytes {
    let result = super.call("INFRA_ROLE", "INFRA_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_INFRA_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("INFRA_ROLE", "INFRA_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  REDEEM_ROLE(): Bytes {
    let result = super.call("REDEEM_ROLE", "REDEEM_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_REDEEM_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("REDEEM_ROLE", "REDEEM_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  authorizedSellersAllOffers(param0: Address): boolean {
    let result = super.call(
      "authorizedSellersAllOffers",
      "authorizedSellersAllOffers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_authorizedSellersAllOffers(
    param0: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "authorizedSellersAllOffers",
      "authorizedSellersAllOffers(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  authorizedSellersByOffer(param0: BigInt, param1: BigInt): Address {
    let result = super.call(
      "authorizedSellersByOffer",
      "authorizedSellersByOffer(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_authorizedSellersByOffer(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "authorizedSellersByOffer",
      "authorizedSellersByOffer(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  creator(): string {
    let result = super.call("creator", "creator():(string)", []);

    return result[0].toString();
  }

  try_creator(): ethereum.CallResult<string> {
    let result = super.tryCall("creator", "creator():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  dropSealed(): boolean {
    let result = super.call("dropSealed", "dropSealed():(bool)", []);

    return result[0].toBoolean();
  }

  try_dropSealed(): ethereum.CallResult<boolean> {
    let result = super.tryCall("dropSealed", "dropSealed():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getApproved(tokenId: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getFeeBps(param0: BigInt): Array<BigInt> {
    let result = super.call("getFeeBps", "getFeeBps(uint256):(uint256[])", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigIntArray();
  }

  try_getFeeBps(param0: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall("getFeeBps", "getFeeBps(uint256):(uint256[])", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getFeeRecipients(param0: BigInt): Array<Address> {
    let result = super.call(
      "getFeeRecipients",
      "getFeeRecipients(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddressArray();
  }

  try_getFeeRecipients(param0: BigInt): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getFeeRecipients",
      "getFeeRecipients(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getMetadata(tokenId: BigInt): Token__getMetadataResultValue0Struct {
    let result = super.call(
      "getMetadata",
      "getMetadata(uint256):((string,string,(bool,string,string[])[],uint256,uint256,uint256,uint64,(string,string,uint16,string)[],(uint64,string)[],uint64,address,uint256,bool,(string,string,string,uint16,string)[]))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return changetype<Token__getMetadataResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getMetadata(
    tokenId: BigInt
  ): ethereum.CallResult<Token__getMetadataResultValue0Struct> {
    let result = super.tryCall(
      "getMetadata",
      "getMetadata(uint256):((string,string,(bool,string,string[])[],uint256,uint256,uint256,uint64,(string,string,uint16,string)[],(uint64,string)[],uint64,address,uint256,bool,(string,string,string,uint16,string)[]))",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Token__getMetadataResultValue0Struct>(value[0].toTuple())
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getSellersFor(offeringId: BigInt): Array<Address> {
    let result = super.call(
      "getSellersFor",
      "getSellersFor(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(offeringId)]
    );

    return result[0].toAddressArray();
  }

  try_getSellersFor(offeringId: BigInt): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getSellersFor",
      "getSellersFor(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(offeringId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isApprovedForAll(owner: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    owner: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(operator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAuthorizedSellerOf(seller: Address, offeringId: BigInt): boolean {
    let result = super.call(
      "isAuthorizedSellerOf",
      "isAuthorizedSellerOf(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(seller),
        ethereum.Value.fromUnsignedBigInt(offeringId)
      ]
    );

    return result[0].toBoolean();
  }

  try_isAuthorizedSellerOf(
    seller: Address,
    offeringId: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAuthorizedSellerOf",
      "isAuthorizedSellerOf(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(seller),
        ethereum.Value.fromUnsignedBigInt(offeringId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  royaltyAddress(): Address {
    let result = super.call("royaltyAddress", "royaltyAddress():(address)", []);

    return result[0].toAddress();
  }

  try_royaltyAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "royaltyAddress",
      "royaltyAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  royaltyBps(): BigInt {
    let result = super.call("royaltyBps", "royaltyBps():(uint256)", []);

    return result[0].toBigInt();
  }

  try_royaltyBps(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("royaltyBps", "royaltyBps():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokenByIndex(index: BigInt): BigInt {
    let result = super.call("tokenByIndex", "tokenByIndex(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toBigInt();
  }

  try_tokenByIndex(index: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenByIndex",
      "tokenByIndex(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenOfOwnerByIndex(owner: Address, index: BigInt): BigInt {
    let result = super.call(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toBigInt();
  }

  try_tokenOfOwnerByIndex(
    owner: Address,
    index: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "tokenOfOwnerByIndex",
      "tokenOfOwnerByIndex(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenURI(tokenId: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_tokenURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get newCreator(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddDropAttributesCall extends ethereum.Call {
  get inputs(): AddDropAttributesCall__Inputs {
    return new AddDropAttributesCall__Inputs(this);
  }

  get outputs(): AddDropAttributesCall__Outputs {
    return new AddDropAttributesCall__Outputs(this);
  }
}

export class AddDropAttributesCall__Inputs {
  _call: AddDropAttributesCall;

  constructor(call: AddDropAttributesCall) {
    this._call = call;
  }

  get attributes(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get offset(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddDropAttributesCall__Outputs {
  _call: AddDropAttributesCall;

  constructor(call: AddDropAttributesCall) {
    this._call = call;
  }
}

export class AddDropContentCall extends ethereum.Call {
  get inputs(): AddDropContentCall__Inputs {
    return new AddDropContentCall__Inputs(this);
  }

  get outputs(): AddDropContentCall__Outputs {
    return new AddDropContentCall__Outputs(this);
  }
}

export class AddDropContentCall__Inputs {
  _call: AddDropContentCall;

  constructor(call: AddDropContentCall) {
    this._call = call;
  }

  get content(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get offset(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddDropContentCall__Outputs {
  _call: AddDropContentCall;

  constructor(call: AddDropContentCall) {
    this._call = call;
  }
}

export class AddDropContentLibrariesCall extends ethereum.Call {
  get inputs(): AddDropContentLibrariesCall__Inputs {
    return new AddDropContentLibrariesCall__Inputs(this);
  }

  get outputs(): AddDropContentLibrariesCall__Outputs {
    return new AddDropContentLibrariesCall__Outputs(this);
  }
}

export class AddDropContentLibrariesCall__Inputs {
  _call: AddDropContentLibrariesCall;

  constructor(call: AddDropContentLibrariesCall) {
    this._call = call;
  }

  get contentLibraries(): Array<
    AddDropContentLibrariesCallContentLibrariesStruct
  > {
    return this._call.inputValues[0].value.toTupleArray<
      AddDropContentLibrariesCallContentLibrariesStruct
    >();
  }
}

export class AddDropContentLibrariesCall__Outputs {
  _call: AddDropContentLibrariesCall;

  constructor(call: AddDropContentLibrariesCall) {
    this._call = call;
  }
}

export class AddDropContentLibrariesCallContentLibrariesStruct extends ethereum.Tuple {
  get arweaveHash(): BigInt {
    return this[0].toBigInt();
  }
}

export class AddDropEditionsCall extends ethereum.Call {
  get inputs(): AddDropEditionsCall__Inputs {
    return new AddDropEditionsCall__Inputs(this);
  }

  get outputs(): AddDropEditionsCall__Outputs {
    return new AddDropEditionsCall__Outputs(this);
  }
}

export class AddDropEditionsCall__Inputs {
  _call: AddDropEditionsCall;

  constructor(call: AddDropEditionsCall) {
    this._call = call;
  }

  get editions(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get offset(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddDropEditionsCall__Outputs {
  _call: AddDropEditionsCall;

  constructor(call: AddDropEditionsCall) {
    this._call = call;
  }
}

export class AddDropSentencesCall extends ethereum.Call {
  get inputs(): AddDropSentencesCall__Inputs {
    return new AddDropSentencesCall__Inputs(this);
  }

  get outputs(): AddDropSentencesCall__Outputs {
    return new AddDropSentencesCall__Outputs(this);
  }
}

export class AddDropSentencesCall__Inputs {
  _call: AddDropSentencesCall;

  constructor(call: AddDropSentencesCall) {
    this._call = call;
  }

  get sentences(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get offset(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddDropSentencesCall__Outputs {
  _call: AddDropSentencesCall;

  constructor(call: AddDropSentencesCall) {
    this._call = call;
  }
}

export class AddDropStringDataCall extends ethereum.Call {
  get inputs(): AddDropStringDataCall__Inputs {
    return new AddDropStringDataCall__Inputs(this);
  }

  get outputs(): AddDropStringDataCall__Outputs {
    return new AddDropStringDataCall__Outputs(this);
  }
}

export class AddDropStringDataCall__Inputs {
  _call: AddDropStringDataCall;

  constructor(call: AddDropStringDataCall) {
    this._call = call;
  }

  get stringData(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get offset(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddDropStringDataCall__Outputs {
  _call: AddDropStringDataCall;

  constructor(call: AddDropStringDataCall) {
    this._call = call;
  }
}

export class AddDropTemplatesCall extends ethereum.Call {
  get inputs(): AddDropTemplatesCall__Inputs {
    return new AddDropTemplatesCall__Inputs(this);
  }

  get outputs(): AddDropTemplatesCall__Outputs {
    return new AddDropTemplatesCall__Outputs(this);
  }
}

export class AddDropTemplatesCall__Inputs {
  _call: AddDropTemplatesCall;

  constructor(call: AddDropTemplatesCall) {
    this._call = call;
  }

  get templates(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get offset(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddDropTemplatesCall__Outputs {
  _call: AddDropTemplatesCall;

  constructor(call: AddDropTemplatesCall) {
    this._call = call;
  }
}

export class AddDropTokensCall extends ethereum.Call {
  get inputs(): AddDropTokensCall__Inputs {
    return new AddDropTokensCall__Inputs(this);
  }

  get outputs(): AddDropTokensCall__Outputs {
    return new AddDropTokensCall__Outputs(this);
  }
}

export class AddDropTokensCall__Inputs {
  _call: AddDropTokensCall;

  constructor(call: AddDropTokensCall) {
    this._call = call;
  }

  get tokens(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get offset(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get length(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddDropTokensCall__Outputs {
  _call: AddDropTokensCall;

  constructor(call: AddDropTokensCall) {
    this._call = call;
  }
}

export class AddTokenContentCall extends ethereum.Call {
  get inputs(): AddTokenContentCall__Inputs {
    return new AddTokenContentCall__Inputs(this);
  }

  get outputs(): AddTokenContentCall__Outputs {
    return new AddTokenContentCall__Outputs(this);
  }
}

export class AddTokenContentCall__Inputs {
  _call: AddTokenContentCall;

  constructor(call: AddTokenContentCall) {
    this._call = call;
  }

  get tokens(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get slug(): string {
    return this._call.inputValues[1].value.toString();
  }

  get contentLibraryArweaveHash(): string {
    return this._call.inputValues[2].value.toString();
  }

  get contentIndex(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get contentType(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class AddTokenContentCall__Outputs {
  _call: AddTokenContentCall;

  constructor(call: AddTokenContentCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class DeregisterSellerCall extends ethereum.Call {
  get inputs(): DeregisterSellerCall__Inputs {
    return new DeregisterSellerCall__Inputs(this);
  }

  get outputs(): DeregisterSellerCall__Outputs {
    return new DeregisterSellerCall__Outputs(this);
  }
}

export class DeregisterSellerCall__Inputs {
  _call: DeregisterSellerCall;

  constructor(call: DeregisterSellerCall) {
    this._call = call;
  }

  get seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DeregisterSellerCall__Outputs {
  _call: DeregisterSellerCall;

  constructor(call: DeregisterSellerCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get attributesStart(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get attributesLength(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class MintBatchCall extends ethereum.Call {
  get inputs(): MintBatchCall__Inputs {
    return new MintBatchCall__Inputs(this);
  }

  get outputs(): MintBatchCall__Outputs {
    return new MintBatchCall__Outputs(this);
  }
}

export class MintBatchCall__Inputs {
  _call: MintBatchCall;

  constructor(call: MintBatchCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get attributesStart(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get attributesLength(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class MintBatchCall__Outputs {
  _call: MintBatchCall;

  constructor(call: MintBatchCall) {
    this._call = call;
  }
}

export class ProcessSaleCall extends ethereum.Call {
  get inputs(): ProcessSaleCall__Inputs {
    return new ProcessSaleCall__Inputs(this);
  }

  get outputs(): ProcessSaleCall__Outputs {
    return new ProcessSaleCall__Outputs(this);
  }
}

export class ProcessSaleCall__Inputs {
  _call: ProcessSaleCall;

  constructor(call: ProcessSaleCall) {
    this._call = call;
  }

  get offeringId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get buyer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ProcessSaleCall__Outputs {
  _call: ProcessSaleCall;

  constructor(call: ProcessSaleCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get memo(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class RegisterSellerCall extends ethereum.Call {
  get inputs(): RegisterSellerCall__Inputs {
    return new RegisterSellerCall__Inputs(this);
  }

  get outputs(): RegisterSellerCall__Outputs {
    return new RegisterSellerCall__Outputs(this);
  }
}

export class RegisterSellerCall__Inputs {
  _call: RegisterSellerCall;

  constructor(call: RegisterSellerCall) {
    this._call = call;
  }

  get seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RegisterSellerCall__Outputs {
  _call: RegisterSellerCall;

  constructor(call: RegisterSellerCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SealDropCall extends ethereum.Call {
  get inputs(): SealDropCall__Inputs {
    return new SealDropCall__Inputs(this);
  }

  get outputs(): SealDropCall__Outputs {
    return new SealDropCall__Outputs(this);
  }
}

export class SealDropCall__Inputs {
  _call: SealDropCall;

  constructor(call: SealDropCall) {
    this._call = call;
  }
}

export class SealDropCall__Outputs {
  _call: SealDropCall;

  constructor(call: SealDropCall) {
    this._call = call;
  }
}

export class SetApisCall extends ethereum.Call {
  get inputs(): SetApisCall__Inputs {
    return new SetApisCall__Inputs(this);
  }

  get outputs(): SetApisCall__Outputs {
    return new SetApisCall__Outputs(this);
  }
}

export class SetApisCall__Inputs {
  _call: SetApisCall;

  constructor(call: SetApisCall) {
    this._call = call;
  }

  get newContentApi(): string {
    return this._call.inputValues[0].value.toString();
  }

  get newMetadataApi(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetApisCall__Outputs {
  _call: SetApisCall;

  constructor(call: SetApisCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetDropRoyaltiesCall extends ethereum.Call {
  get inputs(): SetDropRoyaltiesCall__Inputs {
    return new SetDropRoyaltiesCall__Inputs(this);
  }

  get outputs(): SetDropRoyaltiesCall__Outputs {
    return new SetDropRoyaltiesCall__Outputs(this);
  }
}

export class SetDropRoyaltiesCall__Inputs {
  _call: SetDropRoyaltiesCall;

  constructor(call: SetDropRoyaltiesCall) {
    this._call = call;
  }

  get newRoyaltyAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newRoyaltyBps(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetDropRoyaltiesCall__Outputs {
  _call: SetDropRoyaltiesCall;

  constructor(call: SetDropRoyaltiesCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}
